AWSTemplateFormatVersion: 2010-09-09
Description: Template to spin up cloud architecture for the JobSkillsAnalysis project

Mappings:
  DataSource:
    LandingZoneBucketName: lg-job-skills-data-lake
    AirflowBucketName: lg-job-skills-airflow-bucket
    DagsBucketName: lg-job-skills-dag-bucket
    GlueCatalogDBName: google_jobs

Resources:  
  # ---- S3 Buckets
  RawJobsLanding:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: !FindInMap [DataSource, LandingZoneBucketName]
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      LoggingConfiguration:
        DestinationBucketName: !Ref AccessLogBucketRawJobsLanding

  DagsBucket:
    Type: "AWS::S3::Bucket"
    Properties:
      BucketName: !FindInMap [DataSource, DagsBucketName]
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      LoggingConfiguration:
        DestinationBucketName: !Ref AccessLogBucketRawJobsLanding

  AccessLogBucketRawJobsLanding:
    Type: "AWS::S3::Bucket"
    Properties:
      PublicAccessBlockConfiguration:
        BlockPublicAcls: True
      OwnershipControls:
        Rules:
          - ObjectOwnership: ObjectWriter

  # ---- IAM Roles
  SnowflakeS3StageRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: SnowflakeS3StageRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action: sts:AssumeRole
      Policies: 
        - PolicyName: snowflake_stage_access
          PolicyDocument: 
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                Resource:                   
                  - !GetAtt RawJobsLanding.Arn
                  - !Sub "${RawJobsLanding.Arn}/*"
              - Effect: Allow
                Action: 
                  - s3:ListBucket
                  - s3:GetBucketLocation
                Resource: 
                  - !GetAtt RawJobsLanding.Arn
                  - !Sub "${RawJobsLanding.Arn}/*"

  MWAAExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - airflow-env.amazonaws.com
                - airflow.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: !Ref AWS::StackName
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - airflow:PublishMetrics
                Resource: !Sub arn:aws:airflow:${AWS::Region}:${AWS::AccountId}:environment/lg-job-skills
              - Effect: Deny
                Action: s3:ListAllMyBuckets
                Resource:
                  - !GetAtt AirflowBucket.Arn
                  - !Sub "${AirflowBucket.Arn}/*"
              - Effect: Allow
                Action:
                  - s3:GetObject*
                  - s3:GetBucket*
                  - s3:List*
                Resource:
                  - !GetAtt AirflowBucket.Arn
                  - !Sub "${AirflowBucket.Arn}/*"
                  - !GetAtt ProjectBucket.Arn
                  - !Sub "${ProjectBucket.Arn}/*"
              - Effect: Allow
                Action:
                  - logs:DescribeLogGroups
                  - logs:CreateLogStream
                  - logs:CreateLogGroup
                  - logs:PutLogEvents
                  - logs:GetLogEvents
                  - logs:GetLogRecord
                  - logs:GetLogGroupFields
                  - logs:GetQueryResults
                  - cloudwatch:PutMetricData
                Resource: "*"
              - Effect: Allow
                Action:
                  - sqs:ChangeMessageVisibility
                  - sqs:DeleteMessage
                  - sqs:GetQueueAttributes
                  - sqs:GetQueueUrl
                  - sqs:ReceiveMessage
                  - sqs:SendMessage
                Resource: !Sub arn:aws:sqs:${AWS::Region}:*:airflow-celery-*
              - Effect: Allow
                Action:
                  - kms:Decrypt
                  - kms:DescribeKey
                  - kms:GenerateDataKey*
                  - kms:Encrypt
                Resource: !ImportValue shared-secrets-kms-arn
                Condition:
                  StringLike:
                    kms:ViaService:
                      - !Sub sqs.${AWS::Region}.amazonaws.com
                      - !Sub s3.${AWS::Region}.amazonaws.com

  # ---- MWAA
  AirflowEnvironment:
    Type: AWS::MWAA::Environment
    Properties:
      Name: job-skills-pipeline
      AirflowVersion: "2.4.3"
      EnvironmentClass: mw1.small
      MinWorkers: 1
      MaxWorkers: 5
      DagS3Path: !FindInMap [DataSource, DagsBucketName]
      RequirementsS3Path: requirements/requirements.txt
      SourceBucketArn: !GetAtt AirflowBucket.Arn
      KmsKey: !ImportValue shared-secrets-kms-arn
      ExecutionRoleArn: !GetAtt MWAAExecutionRole.Arn
      WebserverAccessMode: PUBLIC_ONLY
      NetworkConfiguration:
        SubnetIds:
          - !Select [0, !Split [ ",", !ImportValue vpc-network-private-subnets ]]
          - !Select [1, !Split [ ",", !ImportValue vpc-network-private-subnets ]]
        SecurityGroupIds:
          - !Ref SecurityGroup
      LoggingConfiguration:
        DagProcessingLogs:
          Enabled: true
          LogLevel: WARNING
        SchedulerLogs:
          Enabled: true
          LogLevel: WARNING
        TaskLogs:
          Enabled: true
          LogLevel: WARNING
        WebserverLogs:
          Enabled: true
          LogLevel: WARNING
        WorkerLogs:
          Enabled: true
          LogLevel: WARNING
  
  AirflowBucket:
    Type: AWS::S3::Bucket
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Properties:
      BucketName: !FindInMap [EnvironmentValues, !Ref Environment, BucketName]
      VersioningConfiguration:
        Status: Enabled
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerEnforced
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
              KMSMasterKeyID: !ImportValue shared-secrets-kms-arn
            BucketKeyEnabled: true
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LifecycleConfiguration:
        Rules:
          - Id: Infrequent
            Status: Enabled
            Transitions:
              - TransitionInDays: 90
                StorageClass: STANDARD_IA

  AirflowBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref AirflowBucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowSSLRequestsOnly
            Effect: Deny
            Principal: "*"
            Action: "s3:*"
            Resource:
              - !Sub ${AirflowBucket.Arn}
              - !Sub ${AirflowBucket.Arn}/*
            Condition:
              Bool:
                aws:SecureTransport: false

